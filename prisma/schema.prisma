generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model favoritos {
  id_livro   Int
  id_usuario Int
  livros     livros   @relation(fields: [id_livro], references: [id], onDelete: Cascade, onUpdate: NoAction)
  usuarios   usuarios @relation(fields: [id_usuario], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([id_livro, id_usuario])
}

model genero {
  id        Int      @id @default(autoincrement())
  descricao String   @db.VarChar(100)
  livros    livros[]
}

model livros {
  id         Int         @id @default(autoincrement())
  id_usuario Int?
  id_genero  Int?
  nome       String      @db.VarChar(150)
  num_pag    Int?
  autor      String      @db.VarChar(100)
  dt_publi   DateTime?   @db.Date
  lido       Boolean?    @default(false)
  favoritos  favoritos[]
  genero     genero?     @relation(fields: [id_genero], references: [id], onUpdate: NoAction)
  usuarios   usuarios?   @relation(fields: [id_usuario], references: [id], onDelete: Cascade, onUpdate: NoAction)
  quero_ler  quero_ler[]
}

model quero_ler {
  id_livro   Int
  id_usuario Int
  livros     livros   @relation(fields: [id_livro], references: [id], onDelete: Cascade, onUpdate: NoAction)
  usuarios   usuarios @relation(fields: [id_usuario], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([id_livro, id_usuario])
}

model usuarios {
  id        Int         @id @default(autoincrement())
  nome      String      @db.VarChar(100)
  email     String      @unique @db.VarChar(100)
  senha     String      @db.VarChar(100)
  favoritos favoritos[]
  livros    livros[]
  quero_ler quero_ler[]
}
